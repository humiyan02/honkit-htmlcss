"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const immutable_1 = __importDefault(require("immutable"));
const file_1 = __importDefault(require("./file"));
const language_1 = __importDefault(require("./language"));
const Languages = immutable_1.default.Record({
    file: file_1.default(),
    list: immutable_1.default.OrderedMap(),
});
Languages.prototype.getFile = function () {
    return this.get("file");
};
Languages.prototype.getList = function () {
    return this.get("list");
};
/**
 Get default languages

 @return {Language}
 */
Languages.prototype.getDefaultLanguage = function () {
    return this.getList().first();
};
/**
 Get a language by its ID

 @param {String} lang
 @return {Language}
 */
Languages.prototype.getLanguage = function (lang) {
    return this.getList().get(lang);
};
/**
 Return count of langs

 @return {Number}
 */
Languages.prototype.getCount = function () {
    return this.getList().size;
};
/**
 Create a languages list from a JS object

 @param {File}
 @param {Array}
 @return {Language}
 */
// @ts-expect-error ts-migrate(2339) FIXME: Property 'createFromList' does not exist on type '... Remove this comment to see the full error message
Languages.createFromList = function (file, langs) {
    let list = immutable_1.default.OrderedMap();
    langs.forEach((lang) => {
        lang = language_1.default({
            title: lang.title,
            path: lang.ref,
        });
        list = list.set(lang.getID(), lang);
    });
    return Languages({
        file: file,
        list: list,
    });
};
exports.default = Languages;
