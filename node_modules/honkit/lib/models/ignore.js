"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const immutable_1 = __importDefault(require("immutable"));
const ignore_1 = __importDefault(require("ignore"));
/*
    Immutable version of node-ignore
*/
const Ignore = immutable_1.default.Record({
    ignore: ignore_1.default(),
}, "Ignore");
Ignore.prototype.getIgnore = function () {
    return this.get("ignore");
};
/**
 Test if a file is ignored by these rules

 @param {String} filePath
 @return {Boolean}
 */
Ignore.prototype.isFileIgnored = function (filename) {
    const ignore = this.getIgnore();
    return ignore.filter([filename]).length == 0;
};
/**
 Add rules

 @param {String}
 @return {Ignore}
 */
Ignore.prototype.add = function (rule) {
    const ignore = this.getIgnore();
    const newIgnore = ignore_1.default();
    newIgnore.add(ignore);
    newIgnore.add(rule);
    return this.set("ignore", newIgnore);
};
exports.default = Ignore;
